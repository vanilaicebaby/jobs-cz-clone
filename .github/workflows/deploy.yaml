name: Deploy Workuj

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild even if no changes detected'
        required: false
        type: boolean
        default: false
      environment:
        description: 'Deployment environment'
        required: false
        type: choice
        default: 'production'
        options:
          - production
          - staging
          - development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with: 
        node-version: 18
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build project
      run: npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Deploy to S3
      run: |
        echo "🚀 Deploying to S3..."
        aws s3 sync build/ s3://${{ secrets.AWS_S3_BUCKET }}/ --delete --acl public-read
        echo "✅ S3 sync completed!"

    - name: Invalidate CloudFront cache
      run: |
        echo "🔄 Invalidating CloudFront cache..."
        aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
          --paths "/*"
        echo "✅ CloudFront invalidation completed!"

    - name: Deployment summary
      run: |
        echo "🎉 Deployment successful!"
        echo "📦 Files uploaded to S3: ${{ secrets.AWS_S3_BUCKET }}"
        echo "🌐 CloudFront distribution: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}"
        echo "🌍 Environment: ${{ inputs.environment || 'production' }}"
        echo "🔄 Force rebuild: ${{ inputs.force_rebuild }}"